{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://vscode-better-color-picker/./node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js","webpack://vscode-better-color-picker/./node_modules/.pnpm/hex-rgb@4.3.0/node_modules/hex-rgb/index.js","webpack://vscode-better-color-picker/./node_modules/.pnpm/parse-css-color@0.2.1/node_modules/parse-css-color/dist/index.esm.js","webpack://vscode-better-color-picker/./src/extension.ts","webpack://vscode-better-color-picker/./src/color.js","webpack://vscode-better-color-picker/external commonjs \"vscode\"","webpack://vscode-better-color-picker/webpack/bootstrap","webpack://vscode-better-color-picker/webpack/runtime/compat get default export","webpack://vscode-better-color-picker/webpack/runtime/define property getters","webpack://vscode-better-color-picker/webpack/runtime/hasOwnProperty shorthand","webpack://vscode-better-color-picker/webpack/runtime/make namespace object","webpack://vscode-better-color-picker/webpack/startup"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nconst hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = (hex, options = {}) => {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n};\n","import colorName from 'color-name';\nimport hex2Rgb from 'hex-rgb';\n\nconst pattern = /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\\b$/;\nvar hexRe = new RegExp(pattern, 'i');\n\nconst float = '-?\\\\d*(?:\\\\.\\\\d+)';\n\nconst number = `(${float}?)`;\nconst percentage = `(${float}?%)`;\nconst numberOrPercentage = `(${float}?%?)`;\n\nconst pattern$1 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl3Re = new RegExp(pattern$1);\n\nconst pattern$2 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl4Re = new RegExp(pattern$2);\n\nconst pattern$3 = `^\n  rgba?\\\\(\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3NumberRe = new RegExp(pattern$3);\n\nconst pattern$4 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3PercentageRe = new RegExp(pattern$4);\n\nconst pattern$5 = `^\n  rgba?\\\\(\n    \\\\s*${number}\n    \\\\s+${number}\n    \\\\s+${number}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4NumberRe = new RegExp(pattern$5);\n\nconst pattern$6 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4PercentageRe = new RegExp(pattern$6);\n\nconst pattern$7 = /^transparent$/;\nvar transparentRe = new RegExp(pattern$7, 'i');\n\nconst clamp = (num, min, max) => Math.min(Math.max(min, num), max);\n\n/* 500 => 255, -10 => 0, 128 => 128 */\nconst parseRGB = (num) => {\n  let n = num;\n  if (typeof n !== 'number') n = n.endsWith('%') ? (parseFloat(n) * 255) / 100 : parseFloat(n);\n  return clamp(Math.round(n), 0, 255);\n};\n\n/* 200 => 100, -100 => 0, 50 => 50 */\nconst parsePercentage = (percentage) => clamp(parseFloat(percentage), 0, 100);\n\n/* '50%' => 5.0, 200 => 1, -10 => 0 */\nfunction parseAlpha(alpha) {\n  let a = alpha;\n  if (typeof a !== 'number') a = a.endsWith('%') ? parseFloat(a) / 100 : parseFloat(a);\n  return clamp(a, 0, 1);\n}\n\nfunction getHEX(hex) {\n  const [r, g, b, a] = hex2Rgb(hex, { format: 'array' });\n  return getRGB([null, ...[r, g, b, a]]);\n}\n\nfunction getHSL([, h, s, l, a = 1]) {\n  let hh = h;\n  if (hh.endsWith('turn')) {\n    hh = (parseFloat(hh) * 360) / 1;\n  } else if (hh.endsWith('rad')) {\n    hh = Math.round((parseFloat(hh) * 180) / Math.PI);\n  } else {\n    hh = parseFloat(hh);\n  }\n  return {\n    type: 'hsl',\n    values: [hh, parsePercentage(s), parsePercentage(l)],\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\nfunction getRGB([, r, g, b, a = 1]) {\n  return {\n    type: 'rgb',\n    values: [r, g, b].map(parseRGB),\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\n/**\n * parse-css-color\n * @version v0.2.1\n * @link http://github.com/noeldelgado/parse-css-color/\n * @license MIT\n */\n\nconst parseCSSColor = (str) => {\n  if (typeof str !== 'string') return null;\n\n  const hex = hexRe.exec(str);\n  if (hex) return getHEX(hex[0]);\n\n  const hsl = hsl4Re.exec(str) || hsl3Re.exec(str);\n  if (hsl) return getHSL(hsl);\n\n  const rgb =\n    rgb4NumberRe.exec(str) ||\n    rgb4PercentageRe.exec(str) ||\n    rgb3NumberRe.exec(str) ||\n    rgb3PercentageRe.exec(str);\n  if (rgb) return getRGB(rgb);\n\n  if (transparentRe.exec(str)) return getRGB([null, 0, 0, 0, 0]);\n\n  const cn = colorName[str.toLowerCase()];\n  if (cn) return getRGB([null, cn[0], cn[1], cn[2], 1]);\n\n  return null;\n};\n\nexport default parseCSSColor;\n","import * as vscode from 'vscode'\r\nimport parse from 'parse-css-color'\r\nimport Color from './color'\r\n\r\ninterface Match {\r\n  color: vscode.Color\r\n  type: string\r\n  length: number\r\n  range: vscode.Range\r\n}\r\n\r\nfunction parseColorString(color: string) {\r\n  try {\r\n    const p = parse(color)\r\n    if (!p) {\r\n      return null\r\n    }\r\n    if (p.type === 'rgb') {\r\n      const r = p.values[0] as number\r\n      const g = p.values[1] as number\r\n      const b = p.values[2] as number\r\n      const a = p.alpha as number\r\n      return new vscode.Color(r / 255, g / 255, b / 255, a)\r\n    }\r\n    else {\r\n      const h = p.values[0] as number\r\n      const s = p.values[1] as number\r\n      const l = p.values[2] as number\r\n      const a = p.alpha as number\r\n      const { r, g, b } = Color.fromHsl(h, s, l).toRgb()\r\n      return new vscode.Color(r / 255, g / 255, b / 255, a)\r\n    }\r\n  }\r\n  catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(e)\r\n    return null\r\n  }\r\n}\r\n\r\nfunction getPos(text: string, index: number): vscode.Position {\r\n  const nMatches = Array.from(text.slice(0, index).matchAll(/\\n/g))\r\n  const lineNumber = nMatches.length\r\n  if (lineNumber === 0) {\r\n    return new vscode.Position(0, index)\r\n  }\r\n  const characterIndex = index - nMatches[lineNumber - 1].index\r\n\r\n  return new vscode.Position(\r\n    lineNumber,\r\n    characterIndex - 1,\r\n  )\r\n}\r\n\r\nclass Matcher {\r\n  static getMatches(text: string): Match[] {\r\n    const matches = text.matchAll(/#(?:[\\da-f]){8}|#(?:[\\da-f]){6}|#(?:[\\da-f]){4}|#(?:[\\da-f]){3}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\)/gi)\r\n    return Array.from(matches).map((match) => {\r\n      const t = match[0]\r\n      const length = t.length\r\n      let type: string\r\n      if (t.startsWith('hsl(')) {\r\n        type = 'hsl'\r\n      }\r\n      else if (t.startsWith('hsla(')) {\r\n        type = 'hsla'\r\n      }\r\n      else if (t.startsWith('rgb(')) {\r\n        type = 'rgb'\r\n      }\r\n      else if (t.startsWith('rgba(')) {\r\n        type = 'rgba'\r\n      }\r\n      else if (t.startsWith('#')) {\r\n        type = 'hex'\r\n      }\r\n      const range = new vscode.Range(\r\n        getPos(text, match.index),\r\n        getPos(text, match.index + t.length),\r\n      )\r\n      const color = parseColorString(t)\r\n\r\n      if (color) {\r\n        return {\r\n          color,\r\n          type,\r\n          length,\r\n          range,\r\n        } as Match\r\n      }\r\n      return null\r\n    }).filter(d => d !== null)\r\n  }\r\n}\r\n\r\nclass Picker {\r\n  constructor() {\r\n    const subscriptions: vscode.Disposable[] = []\r\n    vscode.workspace.onDidChangeTextDocument(this._onDidChangeTextDocument, this, subscriptions)\r\n    vscode.workspace.onDidChangeConfiguration(this._onDidChangeConfiguration, this, subscriptions)\r\n    this.register()\r\n  }\r\n\r\n  private get languages() {\r\n    return vscode.workspace.getConfiguration('vscode-better-color-picker').get('languages') as Array<string>\r\n  }\r\n\r\n  private _onDidChangeTextDocument(_e: vscode.TextDocumentChangeEvent) {\r\n    // const editor = vscode.window.activeTextEditor\r\n    // const document = e.document\r\n    // const text = document.getText()\r\n  }\r\n\r\n  private _onDidChangeConfiguration() {\r\n\r\n  }\r\n\r\n  private register() {\r\n    this.languages.forEach((language) => {\r\n      vscode.languages.registerColorProvider(language, {\r\n\r\n        provideDocumentColors(document: vscode.TextDocument, _token: vscode.CancellationToken) {\r\n          const matches = Matcher.getMatches(document.getText())\r\n\r\n          return matches.map((match, _i) => new vscode.ColorInformation(\r\n            match.range,\r\n            match.color,\r\n          ))\r\n        },\r\n        provideColorPresentations(color, context, _token) {\r\n          const c = Color.fromRgb(color.red * 255, color.green * 255, color.blue * 255)\r\n          c.alpha = color.alpha\r\n          const colString = context.document.getText(context.range)\r\n          const t = colString\r\n\r\n          const presentationHex = new vscode.ColorPresentation(c.toString('hex'))\r\n          const presentationHexa = new vscode.ColorPresentation(c.toString('hexa'))\r\n          const presentationHsl = new vscode.ColorPresentation(c.toString('hsl'))\r\n          const presentationHsla = new vscode.ColorPresentation(c.toString('hsla'))\r\n          const presentationRgb = new vscode.ColorPresentation(c.toString('rgb'))\r\n          const presentationRgba = new vscode.ColorPresentation(c.toString('rgba'))\r\n\r\n          let hasAlpha = false\r\n          if (t.startsWith('#') && ((t.length === 9) || t.length === 5)) {\r\n            hasAlpha = true\r\n          }\r\n          if (t.startsWith('hsla')) {\r\n            hasAlpha = true\r\n          }\r\n          if (t.startsWith('rgba')) {\r\n            hasAlpha = true\r\n          }\r\n          if (color.alpha !== 1) {\r\n            hasAlpha = true\r\n          }\r\n\r\n          const withAlpha = [\r\n            presentationHexa,\r\n            presentationHsla,\r\n            presentationRgba,\r\n          ]\r\n\r\n          const withoutAlpha = [\r\n            presentationHex,\r\n            presentationHsl,\r\n            presentationRgb,\r\n          ]\r\n          return hasAlpha ? withAlpha : withoutAlpha\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  dispose() {}\r\n}\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  const picker = new Picker()\r\n  context.subscriptions.push(picker)\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() {}\r\n","/* eslint-disable valid-typeof */\r\n'use-strict'\r\n\r\n/**\r\n *\r\n * @param {Any} value\r\n * @param {type} type\r\n */\r\nfunction tc(value, type) {\r\n  if (!(typeof value === type)) {\r\n    throw new TypeError(`required type ${type} got ${typeof value}`)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction ic(value, type) {\r\n  if (!value instanceof type) {\r\n    throw new TypeError(`required type ${type} got ${typeof value}`)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction nc(value) {\r\n  if (Number.isNaN(value)) {\r\n    return 0\r\n  }\r\n  return value\r\n}\r\n\r\nfunction oc(options) {\r\n  const new_options = {\r\n    angle: options ? (options.angle ? options.angle : 15) : 15,\r\n    results: options ? (options.results ? options.results : 3) : 3,\r\n  }\r\n  return new_options\r\n}\r\n\r\nfunction clmp(value, max, min) {\r\n  if (min !== undefined && value < min) {\r\n    return min\r\n  }\r\n  if (value > max) {\r\n    return max\r\n  }\r\n  return value\r\n}\r\n\r\nfunction shift(h, angle) {\r\n  h += angle\r\n  while (h >= 360.0) h -= 360.0\r\n  while (h < 0.0) h += 360.0\r\n  return h\r\n}\r\n\r\nclass Color {\r\n  #red\r\n  #green\r\n  #blue\r\n\r\n  // #region color names\r\n\r\n  static Colors = class {\r\n    static get BLACK() {\r\n      return Color.fromHex('#000000')\r\n    }\r\n\r\n    static get SILVER() {\r\n      return Color.fromHex('#c0c0c0')\r\n    }\r\n\r\n    static get GRAY() {\r\n      return Color.fromHex('#808080')\r\n    }\r\n\r\n    static get WHITE() {\r\n      return Color.fromHex('#ffffff')\r\n    }\r\n\r\n    static get MAROON() {\r\n      return Color.fromHex('#800000')\r\n    }\r\n\r\n    static get RED() {\r\n      return Color.fromHex('#ff0000')\r\n    }\r\n\r\n    static get PURPLE() {\r\n      return Color.fromHex('#800080')\r\n    }\r\n\r\n    static get FUCHSIA() {\r\n      return Color.fromHex('#ff00ff')\r\n    }\r\n\r\n    static get GREEN() {\r\n      return Color.fromHex('#008000')\r\n    }\r\n\r\n    static get LIME() {\r\n      return Color.fromHex('#00ff00')\r\n    }\r\n\r\n    static get OLIVE() {\r\n      return Color.fromHex('#808000')\r\n    }\r\n\r\n    static get YELLOW() {\r\n      return Color.fromHex('#ffff00')\r\n    }\r\n\r\n    static get NAVY() {\r\n      return Color.fromHex('#000080')\r\n    }\r\n\r\n    static get BLUE() {\r\n      return Color.fromHex('#0000ff')\r\n    }\r\n\r\n    static get TEAL() {\r\n      return Color.fromHex('#008080')\r\n    }\r\n\r\n    static get AQUA() {\r\n      return Color.fromHex('#00ffff')\r\n    }\r\n\r\n    static get ORANGE() {\r\n      return Color.fromHex('#ffa500')\r\n    }\r\n\r\n    static get ALICEBLUE() {\r\n      return Color.fromHex('#f0f8ff')\r\n    }\r\n\r\n    static get ANTIQUEWHITE() {\r\n      return Color.fromHex('#faebd7')\r\n    }\r\n\r\n    static get AQUAMARINE() {\r\n      return Color.fromHex('#7fffd4')\r\n    }\r\n\r\n    static get AZURE() {\r\n      return Color.fromHex('#f0ffff')\r\n    }\r\n\r\n    static get BEIGE() {\r\n      return Color.fromHex('#f5f5dc')\r\n    }\r\n\r\n    static get BISQUE() {\r\n      return Color.fromHex('#ffe4c4')\r\n    }\r\n\r\n    static get BLANCHEDALMOND() {\r\n      return Color.fromHex('#ffebcd')\r\n    }\r\n\r\n    static get BLUEVIOLET() {\r\n      return Color.fromHex('#8a2be2')\r\n    }\r\n\r\n    static get BROWN() {\r\n      return Color.fromHex('#a52a2a')\r\n    }\r\n\r\n    static get BURLYWOOD() {\r\n      return Color.fromHex('#deb887')\r\n    }\r\n\r\n    static get CADETBLUE() {\r\n      return Color.fromHex('#5f9ea0')\r\n    }\r\n\r\n    static get CHARTREUSE() {\r\n      return Color.fromHex('#7fff00')\r\n    }\r\n\r\n    static get CHOCOLATE() {\r\n      return Color.fromHex('#d2691e')\r\n    }\r\n\r\n    static get CORAL() {\r\n      return Color.fromHex('#ff7f50')\r\n    }\r\n\r\n    static get CORNFLOWERBLUE() {\r\n      return Color.fromHex('#6495ed')\r\n    }\r\n\r\n    static get CORNSILK() {\r\n      return Color.fromHex('#fff8dc')\r\n    }\r\n\r\n    static get CRIMSON() {\r\n      return Color.fromHex('#dc143c')\r\n    }\r\n\r\n    static get CYAN() {\r\n      return Color.fromHex('#00ffff')\r\n    }\r\n\r\n    static get DARKBLUE() {\r\n      return Color.fromHex('#00008b')\r\n    }\r\n\r\n    static get DARKCYAN() {\r\n      return Color.fromHex('#008b8b')\r\n    }\r\n\r\n    static get DARKGOLDENROD() {\r\n      return Color.fromHex('#b8860b')\r\n    }\r\n\r\n    static get DARKGRAY() {\r\n      return Color.fromHex('#a9a9a9')\r\n    }\r\n\r\n    static get DARKGREEN() {\r\n      return Color.fromHex('#006400')\r\n    }\r\n\r\n    static get DARKGREY() {\r\n      return Color.fromHex('#a9a9a9')\r\n    }\r\n\r\n    static get DARKKHAKI() {\r\n      return Color.fromHex('#bdb76b')\r\n    }\r\n\r\n    static get DARKMAGENTA() {\r\n      return Color.fromHex('#8b008b')\r\n    }\r\n\r\n    static get DARKOLIVEGREEN() {\r\n      return Color.fromHex('#556b2f')\r\n    }\r\n\r\n    static get DARKORANGE() {\r\n      return Color.fromHex('#ff8c00')\r\n    }\r\n\r\n    static get DARKORCHID() {\r\n      return Color.fromHex('#9932cc')\r\n    }\r\n\r\n    static get DARKRED() {\r\n      return Color.fromHex('#8b0000')\r\n    }\r\n\r\n    static get DARKSALMON() {\r\n      return Color.fromHex('#e9967a')\r\n    }\r\n\r\n    static get DARKSEAGREEN() {\r\n      return Color.fromHex('#8fbc8f')\r\n    }\r\n\r\n    static get DARKSLATEBLUE() {\r\n      return Color.fromHex('#483d8b')\r\n    }\r\n\r\n    static get DARKSLATEGRAY() {\r\n      return Color.fromHex('#2f4f4f')\r\n    }\r\n\r\n    static get DARKSLATEGREY() {\r\n      return Color.fromHex('#2f4f4f')\r\n    }\r\n\r\n    static get DARKTURQUOISE() {\r\n      return Color.fromHex('#00ced1')\r\n    }\r\n\r\n    static get DARKVIOLET() {\r\n      return Color.fromHex('#9400d3')\r\n    }\r\n\r\n    static get DEEPPINK() {\r\n      return Color.fromHex('#ff1493')\r\n    }\r\n\r\n    static get DEEPSKYBLUE() {\r\n      return Color.fromHex('#00bfff')\r\n    }\r\n\r\n    static get DIMGRAY() {\r\n      return Color.fromHex('#696969')\r\n    }\r\n\r\n    static get DIMGREY() {\r\n      return Color.fromHex('#696969')\r\n    }\r\n\r\n    static get DODGERBLUE() {\r\n      return Color.fromHex('#1e90ff')\r\n    }\r\n\r\n    static get FIREBRICK() {\r\n      return Color.fromHex('#b22222')\r\n    }\r\n\r\n    static get FLORALWHITE() {\r\n      return Color.fromHex('#fffaf0')\r\n    }\r\n\r\n    static get FORESTGREEN() {\r\n      return Color.fromHex('#228b22')\r\n    }\r\n\r\n    static get GAINSBORO() {\r\n      return Color.fromHex('#dcdcdc')\r\n    }\r\n\r\n    static get GHOSTWHITE() {\r\n      return Color.fromHex('#f8f8ff')\r\n    }\r\n\r\n    static get GOLD() {\r\n      return Color.fromHex('#ffd700')\r\n    }\r\n\r\n    static get GOLDENROD() {\r\n      return Color.fromHex('#daa520')\r\n    }\r\n\r\n    static get GREENYELLOW() {\r\n      return Color.fromHex('#adff2f')\r\n    }\r\n\r\n    static get GREY() {\r\n      return Color.fromHex('#808080')\r\n    }\r\n\r\n    static get HONEYDEW() {\r\n      return Color.fromHex('#f0fff0')\r\n    }\r\n\r\n    static get HOTPINK() {\r\n      return Color.fromHex('#ff69b4')\r\n    }\r\n\r\n    static get INDIANRED() {\r\n      return Color.fromHex('#cd5c5c')\r\n    }\r\n\r\n    static get INDIGO() {\r\n      return Color.fromHex('#4b0082')\r\n    }\r\n\r\n    static get IVORY() {\r\n      return Color.fromHex('#fffff0')\r\n    }\r\n\r\n    static get KHAKI() {\r\n      return Color.fromHex('#f0e68c')\r\n    }\r\n\r\n    static get LAVENDER() {\r\n      return Color.fromHex('#e6e6fa')\r\n    }\r\n\r\n    static get LAVENDERBLUSH() {\r\n      return Color.fromHex('#fff0f5')\r\n    }\r\n\r\n    static get LAWNGREEN() {\r\n      return Color.fromHex('#7cfc00')\r\n    }\r\n\r\n    static get LEMONCHIFFON() {\r\n      return Color.fromHex('#fffacd')\r\n    }\r\n\r\n    static get LIGHTBLUE() {\r\n      return Color.fromHex('#add8e6')\r\n    }\r\n\r\n    static get LIGHTCORAL() {\r\n      return Color.fromHex('#f08080')\r\n    }\r\n\r\n    static get LIGHTCYAN() {\r\n      return Color.fromHex('#e0ffff')\r\n    }\r\n\r\n    static get LIGHTGOLDENRODYELLOW() {\r\n      return Color.fromHex('#fafad2')\r\n    }\r\n\r\n    static get LIGHTGRAY() {\r\n      return Color.fromHex('#d3d3d3')\r\n    }\r\n\r\n    static get LIGHTGREEN() {\r\n      return Color.fromHex('#90ee90')\r\n    }\r\n\r\n    static get LIGHTGREY() {\r\n      return Color.fromHex('#d3d3d3')\r\n    }\r\n\r\n    static get LIGHTPINK() {\r\n      return Color.fromHex('#ffb6c1')\r\n    }\r\n\r\n    static get LIGHTSALMON() {\r\n      return Color.fromHex('#ffa07a')\r\n    }\r\n\r\n    static get LIGHTSEAGREEN() {\r\n      return Color.fromHex('#20b2aa')\r\n    }\r\n\r\n    static get LIGHTSKYBLUE() {\r\n      return Color.fromHex('#87cefa')\r\n    }\r\n\r\n    static get LIGHTSLATEGRAY() {\r\n      return Color.fromHex('#778899')\r\n    }\r\n\r\n    static get LIGHTSLATEGREY() {\r\n      return Color.fromHex('#778899')\r\n    }\r\n\r\n    static get LIGHTSTEELBLUE() {\r\n      return Color.fromHex('#b0c4de')\r\n    }\r\n\r\n    static get LIGHTYELLOW() {\r\n      return Color.fromHex('#ffffe0')\r\n    }\r\n\r\n    static get LIMEGREEN() {\r\n      return Color.fromHex('#32cd32')\r\n    }\r\n\r\n    static get LINEN() {\r\n      return Color.fromHex('#faf0e6')\r\n    }\r\n\r\n    static get MAGENTA() {\r\n      return Color.fromHex('#ff00ff')\r\n    }\r\n\r\n    static get MEDIUMAQUAMARINE() {\r\n      return Color.fromHex('#66cdaa')\r\n    }\r\n\r\n    static get MEDIUMBLUE() {\r\n      return Color.fromHex('#0000cd')\r\n    }\r\n\r\n    static get MEDIUMORCHID() {\r\n      return Color.fromHex('#ba55d3')\r\n    }\r\n\r\n    static get MEDIUMPURPLE() {\r\n      return Color.fromHex('#9370db')\r\n    }\r\n\r\n    static get MEDIUMSEAGREEN() {\r\n      return Color.fromHex('#3cb371')\r\n    }\r\n\r\n    static get MEDIUMSLATEBLUE() {\r\n      return Color.fromHex('#7b68ee')\r\n    }\r\n\r\n    static get MEDIUMSPRINGGREEN() {\r\n      return Color.fromHex('#00fa9a')\r\n    }\r\n\r\n    static get MEDIUMTURQUOISE() {\r\n      return Color.fromHex('#48d1cc')\r\n    }\r\n\r\n    static get MEDIUMVIOLETRED() {\r\n      return Color.fromHex('#c71585')\r\n    }\r\n\r\n    static get MIDNIGHTBLUE() {\r\n      return Color.fromHex('#191970')\r\n    }\r\n\r\n    static get MINTCREAM() {\r\n      return Color.fromHex('#f5fffa')\r\n    }\r\n\r\n    static get MISTYROSE() {\r\n      return Color.fromHex('#ffe4e1')\r\n    }\r\n\r\n    static get MOCCASIN() {\r\n      return Color.fromHex('#ffe4b5')\r\n    }\r\n\r\n    static get NAVAJOWHITE() {\r\n      return Color.fromHex('#ffdead')\r\n    }\r\n\r\n    static get OLDLACE() {\r\n      return Color.fromHex('#fdf5e6')\r\n    }\r\n\r\n    static get OLIVEDRAB() {\r\n      return Color.fromHex('#6b8e23')\r\n    }\r\n\r\n    static get ORANGERED() {\r\n      return Color.fromHex('#ff4500')\r\n    }\r\n\r\n    static get ORCHID() {\r\n      return Color.fromHex('#da70d6')\r\n    }\r\n\r\n    static get PALEGOLDENROD() {\r\n      return Color.fromHex('#eee8aa')\r\n    }\r\n\r\n    static get PALEGREEN() {\r\n      return Color.fromHex('#98fb98')\r\n    }\r\n\r\n    static get PALETURQUOISE() {\r\n      return Color.fromHex('#afeeee')\r\n    }\r\n\r\n    static get PALEVIOLETRED() {\r\n      return Color.fromHex('#db7093')\r\n    }\r\n\r\n    static get PAPAYAWHIP() {\r\n      return Color.fromHex('#ffefd5')\r\n    }\r\n\r\n    static get PEACHPUFF() {\r\n      return Color.fromHex('#ffdab9')\r\n    }\r\n\r\n    static get PERU() {\r\n      return Color.fromHex('#cd853f')\r\n    }\r\n\r\n    static get PINK() {\r\n      return Color.fromHex('#ffc0cb')\r\n    }\r\n\r\n    static get PLUM() {\r\n      return Color.fromHex('#dda0dd')\r\n    }\r\n\r\n    static get POWDERBLUE() {\r\n      return Color.fromHex('#b0e0e6')\r\n    }\r\n\r\n    static get ROSYBROWN() {\r\n      return Color.fromHex('#bc8f8f')\r\n    }\r\n\r\n    static get ROYALBLUE() {\r\n      return Color.fromHex('#4169e1')\r\n    }\r\n\r\n    static get SADDLEBROWN() {\r\n      return Color.fromHex('#8b4513')\r\n    }\r\n\r\n    static get SALMON() {\r\n      return Color.fromHex('#fa8072')\r\n    }\r\n\r\n    static get SANDYBROWN() {\r\n      return Color.fromHex('#f4a460')\r\n    }\r\n\r\n    static get SEAGREEN() {\r\n      return Color.fromHex('#2e8b57')\r\n    }\r\n\r\n    static get SEASHELL() {\r\n      return Color.fromHex('#fff5ee')\r\n    }\r\n\r\n    static get SIENNA() {\r\n      return Color.fromHex('#a0522d')\r\n    }\r\n\r\n    static get SKYBLUE() {\r\n      return Color.fromHex('#87ceeb')\r\n    }\r\n\r\n    static get SLATEBLUE() {\r\n      return Color.fromHex('#6a5acd')\r\n    }\r\n\r\n    static get SLATEGRAY() {\r\n      return Color.fromHex('#708090')\r\n    }\r\n\r\n    static get SLATEGREY() {\r\n      return Color.fromHex('#708090')\r\n    }\r\n\r\n    static get SNOW() {\r\n      return Color.fromHex('#fffafa')\r\n    }\r\n\r\n    static get SPRINGGREEN() {\r\n      return Color.fromHex('#00ff7f')\r\n    }\r\n\r\n    static get STEELBLUE() {\r\n      return Color.fromHex('#4682b4')\r\n    }\r\n\r\n    static get TAN() {\r\n      return Color.fromHex('#d2b48c')\r\n    }\r\n\r\n    static get THISTLE() {\r\n      return Color.fromHex('#d8bfd8')\r\n    }\r\n\r\n    static get TOMATO() {\r\n      return Color.fromHex('#ff6347')\r\n    }\r\n\r\n    static get TURQUOISE() {\r\n      return Color.fromHex('#40e0d0')\r\n    }\r\n\r\n    static get VIOLET() {\r\n      return Color.fromHex('#ee82ee')\r\n    }\r\n\r\n    static get WHEAT() {\r\n      return Color.fromHex('#f5deb3')\r\n    }\r\n\r\n    static get WHITESMOKE() {\r\n      return Color.fromHex('#f5f5f5')\r\n    }\r\n\r\n    static get YELLOWGREEN() {\r\n      return Color.fromHex('#9acd32')\r\n    }\r\n\r\n    static get REBECCAPURPLE() {\r\n      return Color.fromHex('#663399')\r\n    }\r\n  }\r\n\r\n  // #endregion color names\r\n\r\n  // #region scheme\r\n\r\n  getScheme(name, options) {\r\n    return Color.createScheme(this, name, options)\r\n  }\r\n\r\n  static getScheme(color, name, options) {\r\n    return Color.createScheme(color, name, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {object} options\r\n   * @returns Color[]\r\n   */\r\n  static monochromatic(color, options) {\r\n    ic(color, Color)\r\n    let results = oc(options).results || 3\r\n    const hsv = Color.toHsv(color)\r\n    const h = hsv.h\r\n    const s = hsv.s\r\n    let v = hsv.v / 100\r\n    const result = []\r\n    const mod = 1 / results\r\n\r\n    while (results--) {\r\n      result.push(Color.fromHsv(h, s, clmp(v * 100, 100, 0)))\r\n      v = (v - mod) % 1\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  monochromatic(options) {\r\n    return Color.monochromatic(this, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Color\r\n   */\r\n  static complementary(color) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n\r\n    return Color.fromHsl(shift(h, 180), s, l)\r\n  }\r\n\r\n  complementary() {\r\n    return Color.complementary(this)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {object} options\r\n   * @returns Color[3]\r\n   */\r\n  static splitComplementary(color, options) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const angle = oc(options).angle || 15\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n\r\n    const result = [\r\n      color,\r\n      Color.fromHsl(shift(h, 180 + angle), s, l),\r\n      Color.fromHsl(shift(h, 180 - angle), s, l),\r\n    ]\r\n\r\n    return result\r\n  }\r\n\r\n  splitComplementary(options) {\r\n    return Color.splitComplementary(this, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {object} options\r\n   * @returns Color[4]\r\n   */\r\n  static doubleComplementary(color, options) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const angle = oc(options).angle || 15\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n    const result = [\r\n      color,\r\n      Color.fromHsl(shift(h, 180), s, l),\r\n      Color.fromHsl(shift(h, angle), s, l),\r\n      Color.fromHsl(shift(h, 180 + angle), s, l),\r\n    ]\r\n    return result\r\n  }\r\n\r\n  doubleComplementary(options) {\r\n    return Color.doubleComplementary(this, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Color[4]\r\n   */\r\n  static square(color) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    let h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n    const result = [color]\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      h = shift(h, 90)\r\n      result.push(Color.fromHsl(h, s, l))\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  square() {\r\n    return Color.square(this)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {object} options\r\n   * @returns Color[4]\r\n   */\r\n  static tetradic(color, options) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const angle = oc(options).angle\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n    return [\r\n      color,\r\n      Color.fromHsl(shift(h, 180), s, l),\r\n      Color.fromHsl(shift(h, 180 - angle), s, l),\r\n      Color.fromHsl(shift(h, -angle), s, l),\r\n    ]\r\n  }\r\n\r\n  tetradic(options) {\r\n    return Color.tetradic(this, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Color[3]\r\n   */\r\n  static triadic(color) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n    return [\r\n      color,\r\n      Color.fromHsl(shift(h, 120), s, l),\r\n      Color.fromHsl(shift(h, 240), s, l),\r\n    ]\r\n  }\r\n\r\n  triadic() {\r\n    return Color.triadic(this)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {object} options\r\n   * @returns Color[3]\r\n   */\r\n  static analogous(color, options) {\r\n    ic(color, Color)\r\n    const hsl = Color.toHsl(color)\r\n    const angle = oc(options).angle\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = hsl.l\r\n    return [\r\n      color,\r\n      Color.fromHsl(shift(h, -angle), s, l),\r\n      Color.fromHsl(shift(h, +angle), s, l),\r\n    ]\r\n  }\r\n\r\n  analogous(options) {\r\n    return Color.analogous(this, options)\r\n  }\r\n\r\n  static materialPalette(color, options) {\r\n    const opt = oc(options)\r\n    const baseLight = opt.baseLight\r\n    const baseDark = opt.baseDark === 'self' || !opt.baseDark ? this.multiply(color, color) : opt.baseDark\r\n\r\n    return {\r\n      50: Color.mix(baseLight, color, 10),\r\n      100: Color.mix(baseLight, color, 30),\r\n      200: Color.mix(baseLight, color, 50),\r\n      300: Color.mix(baseLight, color, 70),\r\n      400: Color.mix(baseLight, color, 85),\r\n      500: Color.mix(baseLight, color, 100),\r\n      600: Color.mix(baseDark, color, 92),\r\n      700: Color.mix(baseDark, color, 83),\r\n      800: Color.mix(baseDark, color, 74),\r\n      900: Color.mix(baseDark, color, 65),\r\n\r\n      A100: Color.lighten(Color.saturate(Color.mix(baseDark, color, 15), 80), 65),\r\n      A200: Color.lighten(Color.saturate(Color.mix(baseDark, color, 15), 80), 55),\r\n      A400: Color.lighten(Color.saturate(Color.mix(baseLight, color, 100), 55), 10),\r\n      A700: Color.lighten(Color.saturate(Color.mix(baseDark, color, 83), 65), 10),\r\n    }\r\n  }\r\n\r\n  materialPalette(options) {\r\n    return Color.materialPalette(this, options)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {string} name\r\n   * @param {object} options\r\n   * @returns Color[]\r\n   */\r\n  static createScheme(color, name, options) {\r\n    switch (name.toLowerCase()) {\r\n      case 'analogous':\r\n      case 'analog': return Color.analogous(color)\r\n\r\n      case 'triadic':\r\n      case 'triad': return Color.triadic(color)\r\n\r\n      case 'tetradic':\r\n      case 'tetra': return Color.tetradic(color)\r\n\r\n      case 'monochromatic':\r\n      case 'monochrome':\r\n      case 'mono': return Color.monochromatic(color, options)\r\n\r\n      case 'complementary':\r\n      case 'complement':\r\n      case 'comp': return Color.complementary(color)\r\n\r\n      case 'double-complementary':\r\n      case 'double-complement':\r\n      case 'double': return Color.doubleComplementary(color)\r\n\r\n      case 'split-complementary':\r\n      case 'split-complement':\r\n      case 'split': return Color.splitComplementary(color)\r\n\r\n      case 'square': return Color.square(color)\r\n      case 'material': return Color.materialPalette(color)\r\n    }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   *\r\n   * @param {number} r\r\n   * @param {number} g\r\n   * @param {number} b\r\n   */\r\n  constructor(r, g, b) {\r\n    if (!((r >= 0 && r <= 255) && (g >= 0 && g <= 255) && (b >= 0 && b <= 255))) {\r\n      throw new Error('Color values out of bounds (0 - 255)')\r\n    }\r\n    this.#red = nc(tc(r, 'number'))\r\n    this.#green = nc(tc(g, 'number'))\r\n    this.#blue = nc(tc(b, 'number'))\r\n    this.alpha = 1\r\n  }\r\n\r\n  // #region mix methods\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  static saturate(color, amount) {\r\n    oc(color, Color)\r\n    tc(amount, 'number')\r\n    const hsl = color.toHsl()\r\n    const h = hsl.h\r\n    const s = clmp(hsl.s + amount, 100, 0)\r\n    const l = hsl.l\r\n    return Color.fromHsl(h, s, l)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  saturate(amount) {\r\n    return Color.saturate(this, amount)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  static desaturate(color, amount) {\r\n    oc(color, Color)\r\n    tc(amount, 'number')\r\n    const hsl = color.toHsl()\r\n    const h = hsl.h\r\n    const s = clmp(hsl.s - amount, 100, 0)\r\n    const l = hsl.l\r\n    return Color.fromHsl(h, s, l)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  desaturate(amount) {\r\n    return Color.desaturate(this, amount)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Color\r\n   */\r\n  static grayscale(color) {\r\n    return Color.desaturate(color, 100)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns Color\r\n   */\r\n  grayscale() {\r\n    return Color.greyscale(this, 100)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Color\r\n   */\r\n  static greyscale(color) {\r\n    return Color.desaturate(color, 100)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns Color\r\n   */\r\n  greyscale() {\r\n    return Color.greyscale(this, 100)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  static lighten(color, amount) {\r\n    ic(color, Color)\r\n    tc(amount, 'number')\r\n\r\n    const hsl = color.toHsl()\r\n    const h = hsl.h\r\n    const s = hsl.s\r\n    const l = clmp(hsl.l + amount, 100, 0)\r\n\r\n    return Color.fromHsl(h, s, l)\r\n  }\r\n\r\n  /** @param {number} amount */\r\n  lighten(amount) {\r\n    return Color.lighten(this, amount)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  static darken(color, amount) {\r\n    return Color.lighten(color, -amount)\r\n  }\r\n\r\n  /** @param {number} amount */\r\n  darken(amount) {\r\n    return Color.darken(this, amount)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  static brighten(color, amount) {\r\n    const rgb = color.toRgb()\r\n\r\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))))\r\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))))\r\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))))\r\n\r\n    return new Color(rgb.r, rgb.g, rgb.b)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} amount\r\n   * @returns Color\r\n   */\r\n  brighten(amount) {\r\n    return Color.brighten(this, amount)\r\n  }\r\n\r\n  /** @param {Color} color @param {Number} angle  */\r\n  static shiftHue(color, angle) {\r\n    ic(color, Color)\r\n    tc(angle, Number)\r\n    let { h, s, l } = color.toHsl()\r\n    h = shift(h, angle)\r\n    return Color.fromHsl(h, s, l)\r\n  }\r\n\r\n  /** @param {number} angle */\r\n  shiftHue(angle) {\r\n    return Color.shiftHue(this, angle)\r\n  }\r\n\r\n  /** @param {Color} color1 @param {Color} color2  */\r\n  static multiply(color1, color2) {\r\n    ic(color1, Color)\r\n    ic(color2, Color)\r\n    const { r1, g1, b1 } = color1.toRgb()\r\n    const { r2, g2, b2 } = color2.toRgb()\r\n\r\n    return Color.fromRgb((r1 * r2) / 255, (g1 * g2) / 255, (b1 * b2) / 255)\r\n  }\r\n\r\n  multiply(color) {\r\n    return Color.multiply(this, color)\r\n  }\r\n\r\n  /** @param {Color} color1 @param {Color} color2 @param {Number} amount */\r\n  static mix(color1, color2, amount = 50) {\r\n    ic(color1, Color)\r\n    ic(color1, Color)\r\n    tc(amount, 'number')\r\n\r\n    const rgb1 = color1.toRgb()\r\n    const rgb2 = color2.toRgb()\r\n\r\n    const p = clmp(amount, 100, 0) / 100\r\n\r\n    const r = Math.round(((rgb2.r - rgb1.r) * p) + rgb1.r)\r\n    const g = Math.round(((rgb2.g - rgb1.g) * p) + rgb1.g)\r\n    const b = Math.round(((rgb2.b - rgb1.b) * p) + rgb1.b)\r\n\r\n    return Color.fromRgb(r, g, b)\r\n  }\r\n\r\n  mix(color, amount) {\r\n    return Color.mix(this, color, amount)\r\n  }\r\n\r\n  /** @param {Color} color1 @param {Color} color2 @param {Number} amount */\r\n  static lerp(color1, color2, t = 0.5) {\r\n    tc(t, 'number')\r\n    ic(color1, Color)\r\n    ic(color2, Color)\r\n    t = clmp(t, 1, 0)\r\n    const rgb1 = color1.toRgb()\r\n    const rgb2 = color2.toRgb()\r\n\r\n    const r1 = rgb1.r / 255\r\n    const g1 = rgb1.g / 255\r\n    const b1 = rgb1.b / 255\r\n\r\n    const r2 = rgb2.r / 255\r\n    const g2 = rgb2.g / 255\r\n    const b2 = rgb2.b / 255\r\n\r\n    return Color.fromRgb(\r\n      (r1 + (r2 - r1) * t) * 255,\r\n      (g1 + (g2 - g1) * t) * 255,\r\n      (b1 + (b2 - b1) * t) * 255,\r\n    )\r\n  }\r\n\r\n  /** @param {Color} color @param {Number} amount */\r\n  lerp(color, t) {\r\n    return Color.lerp(this, color, t)\r\n  }\r\n\r\n  /** @param {Color} color1 @param {Color} color2 */\r\n  static add(color1, color2) {\r\n    ic(color1, Color)\r\n    ic(color2, Color)\r\n\r\n    const rgb1 = color1.toRgb()\r\n    const rgb2 = color2.toRgb()\r\n\r\n    const r1 = rgb1.r\r\n    const g1 = rgb1.g\r\n    const b1 = rgb1.b\r\n\r\n    const r2 = rgb2.r\r\n    const g2 = rgb2.g\r\n    const b2 = rgb2.b\r\n\r\n    return Color.fromRgb(\r\n      Math.round((r1 + r2) / 2),\r\n      Math.round((g1 + g2) / 2),\r\n      Math.round((b1 + b2) / 2),\r\n    )\r\n  }\r\n\r\n  /** @param {Color} color */\r\n  add(color) {\r\n    return Color.add(this, color)\r\n  }\r\n  // #endregion\r\n\r\n  // #region from methods\r\n\r\n  /**\r\n   *\r\n   * @param {string} hex\r\n   * @returns Color\r\n   */\r\n  static fromHex(hex) {\r\n    if (!hex.match(/^#?(?:[0-9a-fA-F]{3}){1,2}$/i)) {\r\n      throw new Error(`Invalid Hex code: \"${hex}\"`)\r\n    }\r\n    let r = '0x00'\r\n    let g = '0x00'\r\n    let b = '0x00'\r\n    if (hex.length === 4) {\r\n      r = `0x${hex[1]}${hex[1]}`\r\n      g = `0x${hex[2]}${hex[2]}`\r\n      b = `0x${hex[3]}${hex[3]}`\r\n    }\r\n    else if (hex.length === 3) {\r\n      r = `0x${hex[0]}${hex[0]}`\r\n      g = `0x${hex[1]}${hex[1]}`\r\n      b = `0x${hex[2]}${hex[2]}`\r\n    }\r\n    else if (hex.length === 7) {\r\n      r = `0x${hex[1]}${hex[2]}`\r\n      g = `0x${hex[3]}${hex[4]}`\r\n      b = `0x${hex[5]}${hex[6]}`\r\n    }\r\n    else if (hex.length === 6) {\r\n      r = `0x${hex[0]}${hex[1]}`\r\n      g = `0x${hex[2]}${hex[3]}`\r\n      b = `0x${hex[4]}${hex[5]}`\r\n    }\r\n\r\n    const color = new Color(Number.parseInt(r, 16), Number.parseInt(g, 16), Number.parseInt(b, 16))\r\n    return color\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} r\r\n   * @param {number} g\r\n   * @param {number} b\r\n   * @returns Color\r\n   */\r\n  static fromRgb(r, g, b) {\r\n    return new Color(r, g, b)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} hue\r\n   * @param {number} sat\r\n   * @param {number} lum\r\n   * @returns Color\r\n   */\r\n  static fromHsl(hue, sat, lum) {\r\n    hue = tc(hue, 'number')\r\n    sat = tc(sat, 'number')\r\n    lum = tc(lum, 'number')\r\n    if (!(hue >= 0 && hue <= 360)) {\r\n      throw new Error('HSL color values out of range, hue (0 - 360)')\r\n    }\r\n    if (!(sat >= 0 && sat <= 100)) {\r\n      throw new Error('HSL color values out of range, sat (0 - 100)')\r\n    }\r\n    if (!(lum >= 0 && lum <= 100)) {\r\n      throw new Error('HSL color values out of range, lum (0 - 100)')\r\n    }\r\n\r\n    sat /= 100\r\n    lum /= 100\r\n\r\n    const c = (1 - Math.abs(2 * lum - 1)) * sat\r\n    const x = c * (1 - Math.abs((hue / 60) % 2 - 1))\r\n    const m = lum - c / 2\r\n    let r = 0\r\n    let g = 0\r\n    let b = 0\r\n\r\n    if (hue >= 0 && hue < 60) {\r\n      r = c; g = x; b = 0\r\n    }\r\n    else if (hue >= 60 && hue < 120) {\r\n      r = x; g = c; b = 0\r\n    }\r\n    else if (hue >= 120 && hue < 180) {\r\n      r = 0; g = c; b = x\r\n    }\r\n    else if (hue >= 180 && hue < 240) {\r\n      r = 0; g = x; b = c\r\n    }\r\n    else if (hue >= 240 && hue < 300) {\r\n      r = x; g = 0; b = c\r\n    }\r\n    else if (hue >= 300 && hue <= 360) {\r\n      r = c; g = 0; b = x\r\n    }\r\n\r\n    const red = Math.round((r + m) * 255)\r\n    const green = Math.round((g + m) * 255)\r\n    const blue = Math.round((b + m) * 255)\r\n\r\n    const color = new Color(red, green, blue)\r\n\r\n    return color\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} hue\r\n   * @param {number} sat\r\n   * @param {number} lum\r\n   * @returns Colo\r\n   */\r\n  static fromHsv(hue, sat, lum) {\r\n    hue = tc(hue, 'number')\r\n    sat = tc(sat, 'number')\r\n    lum = tc(lum, 'number')\r\n    if (!(hue >= 0 && hue <= 360)) {\r\n      throw new Error('HSL color values out of range, hue (0 - 360)')\r\n    }\r\n    if (!(sat >= 0 && sat <= 100)) {\r\n      throw new Error('HSL color values out of range, sat (0 - 100)')\r\n    }\r\n    if (!(lum >= 0 && lum <= 100)) {\r\n      throw new Error('HSL color values out of range, lum (0 - 100)')\r\n    }\r\n\r\n    sat /= 100\r\n    lum /= 100\r\n    const c = lum * sat\r\n    const x = c * (1 - Math.abs((hue / 60) % 2 - 1))\r\n    const m = lum - c\r\n\r\n    let r = 0\r\n    let g = 0\r\n    let b = 0\r\n\r\n    if (hue >= 0 && hue < 60) {\r\n      r = c\r\n      g = x\r\n      b = 0\r\n    }\r\n\r\n    else if (hue >= 60 && hue < 120) {\r\n      r = x\r\n      g = c\r\n      b = 0\r\n    }\r\n\r\n    else if (hue >= 120 && hue < 180) {\r\n      r = 0\r\n      g = c\r\n      b = x\r\n    }\r\n\r\n    else if (hue >= 180 && hue < 240) {\r\n      r = 0\r\n      g = x\r\n      b = c\r\n    }\r\n\r\n    else if (hue >= 240 && hue < 300) {\r\n      r = x\r\n      g = 0\r\n      b = c\r\n    }\r\n\r\n    else if (hue >= 300 && hue <= 360) {\r\n      r = c\r\n      g = 0\r\n      b = x\r\n    }\r\n\r\n    const red = ((r + m) * 255)\r\n    const green = ((g + m) * 255)\r\n    const blue = ((b + m) * 255)\r\n\r\n    const color = new Color(red, green, blue)\r\n\r\n    return color\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} colorString\r\n   * @returns Color\r\n   */\r\n  static fromCssString(colorString) {\r\n    tc(colorString, 'string')\r\n    const ctx = document.createElement('canvas').getContext('2d')\r\n    ctx.fillStyle = colorString\r\n    const value = ctx.fillStyle\r\n    if (!value) {\r\n      throw new Error('Invalid Color string')\r\n    }\r\n    return Color.fromHex(value)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} colorName\r\n   */\r\n  static fromName(colorName) {\r\n    colorName = tc(colorName, 'string')\r\n    const color = this.Colors[colorName.toUpperCase()]\r\n    if (!color) {\r\n      throw new Error('Invalid Color name')\r\n    }\r\n    return color\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region to methods\r\n\r\n  /**\r\n   * @typedef {object} hsl\r\n   * @property {number} h - hue\r\n   * @property {number} s - saturation\r\n   * @property {number} l - luminance\r\n   */\r\n  /**\r\n   * @param {Color} color\r\n   * @returns string\r\n   */\r\n  static toHex(color) {\r\n    color = ic(color, Color)\r\n    let r = Math.round(color.#red).toString(16)\r\n    let g = Math.round(color.#green).toString(16)\r\n    let b = Math.round(color.#blue).toString(16)\r\n\r\n    if (r.length === 1) {\r\n      r = `0${r}`\r\n    }\r\n    if (g.length === 1) {\r\n      g = `0${g}`\r\n    }\r\n    if (b.length === 1) {\r\n      b = `0${b}`\r\n    }\r\n\r\n    return `#${r}${g}${b}`\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns Number[]\r\n   */\r\n  static toHsl(color) {\r\n    color = ic(color, Color)\r\n\r\n    let h = 0\r\n    let s = 0\r\n    let l = 0\r\n\r\n    const r = color.#red / 255\r\n    const g = color.#green / 255\r\n    const b = color.#blue / 255\r\n\r\n    const cmin = Math.min(Math.min(r, g), b)\r\n    const cmax = Math.max(Math.max(r, g), b)\r\n    const delta = cmax - cmin\r\n\r\n    if (delta === 0) {\r\n      h = 0\r\n    }\r\n\r\n    else if (cmax === r) {\r\n      h = ((g - b) / delta) % 6\r\n    }\r\n\r\n    else if (cmax === g) {\r\n      h = (b - r) / delta + 2\r\n    }\r\n\r\n    else {\r\n      h = (r - g) / delta + 4\r\n    }\r\n\r\n    h = Math.round(h * 60)\r\n\r\n    if (h < 0) {\r\n      h += 360\r\n    }\r\n\r\n    l = (cmax + cmin) / 2\r\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\r\n    s = Number.parseFloat(Math.abs(s * 100))\r\n    l = Number.parseFloat(Math.abs(l * 100))\r\n\r\n    return { h: nc(h), s: nc(s), l: nc(l) }\r\n  }\r\n\r\n  /**\r\n   * @typedef {object} hsv\r\n   * @property {number} h - hue\r\n   * @property {number} s - saturation\r\n   * @property {number} v - value\r\n   */\r\n  /**\r\n   * @param {Color} color\r\n   * @returns { hsv } hsv\r\n   */\r\n  static toHsv(color) {\r\n    let h = 0\r\n    let s = 0\r\n    let v = 0\r\n\r\n    const r = color.#red / 255\r\n    const g = color.#green / 255\r\n    const b = color.#blue / 255\r\n\r\n    const cmin = Math.min(Math.min(r, g), b)\r\n    const cmax = Math.max(Math.max(r, g), b)\r\n    const delta = cmax - cmin\r\n\r\n    if (delta === 0) {\r\n      h = 0\r\n    }\r\n\r\n    else if (cmax === r) {\r\n      h = ((g - b) / delta) % 6\r\n    }\r\n\r\n    else if (cmax === g) {\r\n      h = (b - r) / delta + 2\r\n    }\r\n\r\n    else {\r\n      h = (r - g) / delta + 4\r\n    }\r\n\r\n    h = Math.round(h * 60)\r\n\r\n    if (h < 0) {\r\n      h += 360\r\n    }\r\n\r\n    if (cmax !== 0) {\r\n      s = (delta / cmax) * 100\r\n    }\r\n\r\n    v = cmax * 100\r\n    return { h: nc(h), s: nc(s), v: nc(v) }\r\n  }\r\n\r\n  /**\r\n   * @typedef {object} rgb\r\n   * @property {number} r - red\r\n   * @property {number} g - green\r\n   * @property {number} b - blue\r\n   */\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns { rgb } rgb\r\n   */\r\n  static toRgb(color) {\r\n    ic(color, Color)\r\n    return { r: color.#red, g: color.#green, b: color.#blue }\r\n  }\r\n\r\n  /**\r\n   * @typedef {object} cmyk\r\n   * @property {number} c - cyan\r\n   * @property {number} m - magenta\r\n   * @property {number} y - yellow\r\n   * @property {number} k - black\r\n   */\r\n  /**\r\n   *\r\n   * @param {Color} color\r\n   * @returns { cmyk } cmyk\r\n   */\r\n  static toCmyk(color) {\r\n    ic(color, Color)\r\n    const { r, g, b } = color.toRgb()\r\n    let c = 1 - (r / 255)\r\n    let m = 1 - (g / 255)\r\n    let y = 1 - (b / 255)\r\n    let k = Math.min(c, Math.min(m, y))\r\n\r\n    c = (c - k) / (1 - k)\r\n    m = (m - k) / (1 - k)\r\n    y = (y - k) / (1 - k)\r\n\r\n    c = nc(Math.round(c * 10000) / 100)\r\n    m = nc(Math.round(m * 10000) / 100)\r\n    y = nc(Math.round(y * 10000) / 100)\r\n    k = nc(Math.round(k * 10000) / 100)\r\n\r\n    return { c, m, y, k }\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region to methods (instance)\r\n\r\n  /**\r\n   * @typedef {object} hsl\r\n   * @property {number} h - hue\r\n   * @property {number} s - saturation\r\n   * @property {number} l - luminance\r\n   */\r\n  toHsl() {\r\n    return Color.toHsl(this)\r\n  }\r\n\r\n  /**\r\n   * @typedef {object} hsv\r\n   * @property {number} h - hue\r\n   * @property {number} s - saturation\r\n   * @property {number} v - value\r\n   */\r\n  toHsv() {\r\n    return Color.toHsv(this)\r\n  }\r\n\r\n  /** @returns string */\r\n  toHex() {\r\n    return Color.toHex(this)\r\n  }\r\n\r\n  /**\r\n   * @returns {rgb} rgb\r\n   */\r\n  toRgb() {\r\n    return Color.toRgb(this)\r\n  }\r\n\r\n  /**\r\n   * @returns {cmyk} cmyk\r\n   */\r\n  toCmyk() {\r\n    return Color.toCmyk(this)\r\n  }\r\n\r\n  // #endregion\r\n\r\n  static random() {\r\n    const r = Math.floor(Math.random() * 255)\r\n    const g = Math.floor(Math.random() * 255)\r\n    const b = Math.floor(Math.random() * 255)\r\n    return new Color(r, g, b)\r\n  }\r\n\r\n  toString(type = 'hex') {\r\n    tc(type, 'string')\r\n    const rgb = this.toRgb()\r\n    const hsl = this.toHsl()\r\n    switch (type.toLowerCase()) {\r\n      case 'hex':\r\n        return this.toHex()\r\n\r\n      case 'hexa': {\r\n        let a = Math.round(this.alpha * 255).toString(16)\r\n        if (a.length === 1) {\r\n          a = `0${a}`\r\n        };\r\n        return this.toHex() + a\r\n      }\r\n      case 'rgb':\r\n        return `rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})`\r\n      case 'rgba':\r\n        return `rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${this.alpha})`\r\n      case 'hsl':\r\n        return `hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`\r\n      case 'hsla':\r\n        return `hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${this.alpha})`\r\n      case 'hsv': {\r\n        const hsv = this.toHsv()\r\n        return `hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)`\r\n      }\r\n      case 'cmyk': {\r\n        const cmyk = this.toCmyk()\r\n        return `cmyk(${Math.round(cmyk.c)}%, ${Math.round(cmyk.m)}%, ${Math.round(cmyk.y)}%, ${Math.round(cmyk.k)}%)`\r\n      }\r\n      default: {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Can\\'t convert Color to given string type')\r\n      }\r\n    }\r\n  }\r\n\r\n  valueOf() {\r\n    return Number.parseInt(`0x${this.toHex().slice(1)}`)\r\n  }\r\n}\r\n\r\nexport default Color\r\n// module.exports = Color;\r\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(832);\n"],"names":["module","exports","hexCharacters","match3or4Hex","match6or8Hex","nonHexChars","RegExp","validHexSize","hex","options","test","TypeError","alphaFromHex","replace","length","Number","parseInt","slice","repeat","number","red","green","blue","alpha","format","toFixed","hexRe","float","percentage","numberOrPercentage","pattern$1","hsl3Re","pattern$2","hsl4Re","pattern$3","rgb3NumberRe","pattern$4","rgb3PercentageRe","pattern$5","rgb4NumberRe","pattern$6","rgb4PercentageRe","transparentRe","clamp","num","min","max","Math","parseRGB","n","endsWith","parseFloat","round","parsePercentage","parseAlpha","a","getRGB","r","g","b","type","values","map","str","exec","getHEX","hsl","h","s","l","hh","PI","getHSL","rgb","cn","toLowerCase","getPos","text","index","nMatches","Array","from","matchAll","lineNumber","vscode","Position","characterIndex","Matcher","getMatches","matches","match","t","startsWith","range","Range","color","p","Color","fromHsl","toRgb","e","console","log","parseColorString","filter","d","Picker","constructor","subscriptions","workspace","onDidChangeTextDocument","this","_onDidChangeTextDocument","onDidChangeConfiguration","_onDidChangeConfiguration","register","languages","getConfiguration","get","_e","forEach","language","registerColorProvider","provideDocumentColors","document","_token","getText","_i","ColorInformation","provideColorPresentations","context","c","fromRgb","presentationHex","ColorPresentation","toString","presentationHexa","presentationHsl","presentationHsla","presentationRgb","presentationRgba","hasAlpha","dispose","picker","push","tc","value","ic","nc","isNaN","oc","angle","results","clmp","undefined","shift","static","BLACK","fromHex","SILVER","GRAY","WHITE","MAROON","RED","PURPLE","FUCHSIA","GREEN","LIME","OLIVE","YELLOW","NAVY","BLUE","TEAL","AQUA","ORANGE","ALICEBLUE","ANTIQUEWHITE","AQUAMARINE","AZURE","BEIGE","BISQUE","BLANCHEDALMOND","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GREENYELLOW","GREY","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIMEGREEN","LINEN","MAGENTA","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","OLDLACE","OLIVEDRAB","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","TAN","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITESMOKE","YELLOWGREEN","REBECCAPURPLE","getScheme","name","createScheme","monochromatic","hsv","toHsv","v","result","mod","fromHsv","complementary","toHsl","splitComplementary","doubleComplementary","square","i","tetradic","triadic","analogous","materialPalette","opt","baseLight","baseDark","multiply","mix","A100","lighten","saturate","A200","A400","A700","Error","amount","desaturate","grayscale","greyscale","darken","brighten","shiftHue","color1","color2","r1","g1","b1","r2","g2","b2","rgb1","rgb2","lerp","add","hue","sat","lum","abs","x","m","fromCssString","colorString","ctx","createElement","getContext","fillStyle","fromName","colorName","Colors","toUpperCase","toHex","cmin","cmax","delta","toCmyk","y","k","random","floor","cmyk","valueOf","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}